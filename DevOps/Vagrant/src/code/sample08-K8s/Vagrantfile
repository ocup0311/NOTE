# -*- mode: ruby -*-
# vi: set ft=ruby :
#
Vagrant.require_version ">= 1.6.0"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

SRC_PATH = "../../../../Kubernetes/src/code/practice01"

k8s_master = {
    :name => "k8s-master",
    :eth1 => "192.168.56.10",
    :mem => "4096",
    :cpu => "2"
  }

worker_list = [
  {
    :name => "k8s-worker1",
    :eth1 => "192.168.56.11",
    :mem => "2048",
    :cpu => "2"
  },
  {
    :name => "k8s-worker2",
    :eth1 => "192.168.56.12",
    :mem => "2048",
    :cpu => "2"
  }
]

Vagrant.configure(2) do |config|
  # set all
  config.vm.box = "ubuntu/jammy64"
  config.vm.synced_folder ".", "/vagrant", disabled: true, type: "virtualbox"
  config.vm.synced_folder "./setup/share/", "/vagrant/share", disabled: false, type: "virtualbox"
  
  # set master
  config.vm.define k8s_master[:name] do |master|
    master.vm.hostname = k8s_master[:name]
    master.vm.synced_folder "#{SRC_PATH}/master/", "/vagrant/src", disabled: false, type: "virtualbox"
    master.vm.synced_folder "./setup/master/", "/vagrant/setup", disabled: false, type: "rsync"

    master.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--memory", k8s_master[:mem]]
      v.customize ["modifyvm", :id, "--cpus", k8s_master[:cpu]]
    end

    master.vm.network :private_network, ip: k8s_master[:eth1]
    master.vm.provision "install", type: "shell", privileged: false, path: "./setup/install.sh"
    master.vm.provision "init", type: "shell", privileged: false, path: "./setup/master/init.sh"
  end

  # set worker node
  worker_list.each do |worker|
    config.vm.define worker[:name] do |node|
      node.vm.hostname = worker[:name]
      node.vm.synced_folder "#{SRC_PATH}/worker/", "/vagrant/src", disabled: false, type: "virtualbox"
      node.vm.synced_folder "./setup/worker/", "/vagrant/setup", disabled: false, type: "rsync"

      node.vm.provider "virtualbox" do |v|
        v.customize ["modifyvm", :id, "--memory", worker[:mem]]
        v.customize ["modifyvm", :id, "--cpus", worker[:cpu]]
      end

      node.vm.network :private_network, ip: worker[:eth1]
      node.vm.provision "install", type: "shell", privileged: false, path: "./setup/install.sh"
      node.vm.provision "join", type: "shell", privileged: false, path: "./setup/worker/join.sh"

      if worker == worker_list.last
        node.vm.provision "clear", type: "shell", privileged: false, path: "./setup/clear.sh"
      end
    end
  end
end